version: '3.1'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    networks:
      - frontendnet
    deploy:
      replicas: 1
      update_config:
        parallelism: 2
        delay: 10s
      restart_policy:
        condition: on-failure
  server:
    build:
      context: ./server
      args:
        - NODE_ENV=development
    # you can use legacy debug config or new inspect
    # NOTE: if nodemon isn't restarting on changes, you might be on Windows
    # which has trouble seeing file changes, so add -L to use legacy polling
    # https://github.com/remy/nodemon#application-isnt-restarting
    #command: ../node_modules/.bin/nodemon --debug=0.0.0.0:5858
    command: npm run dev --prefix server
    networks:
      - frontendnet
    depends_on:
      - redis
    ports:
      - 5000:5000
    volumes:
      - .:/opt/app:delegated
      # this is a workaround to prevent host node_modules from accidently getting mounted in container
      # in case you want to use node/npm both outside container for test/lint etc. and also inside container
      # this will overwrite the default node_modules dir in container so it won't conflict with our
      # /opt/node_modules location. Thanks to PR from @brnluiz
      - notusedserver:/opt/app/node_modules
    environment:
      - NODE_ENV=development
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

  client:
    build:
      context: ./client
      args:
        - NODE_ENV=development
    command: npm run start --prefix client
    networks:
      - frontendnet
    depends_on:
      - server
    ports:
      - 3000:3000
    volumes:
      - .:/opt/app:delegated
      # this is a workaround to prevent host node_modules from accidently getting mounted in container
      # in case you want to use node/npm both outside container for test/lint etc. and also inside container
      # this will overwrite the default node_modules dir in container so it won't conflict with our
      # /opt/node_modules location. Thanks to PR from @brnluiz
      - notusedclient:/opt/app/node_modules
    environment:
      - NODE_ENV=development
    deploy:
      replicas: 2
      update_config:
        parallelism: 2
      restart_policy:
        condition: on-failure

networks:
  frontendnet:

volumes:
    notusedclient:
    notusedserver: